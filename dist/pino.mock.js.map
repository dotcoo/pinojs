{"version":3,"sources":["webpack://pinomock/webpack/universalModuleDefinition","webpack://pinomock/webpack/bootstrap","webpack://pinomock/./src/mock/Server.js","webpack://pinomock/./src/mock/XMLHttpRequest.js","webpack://pinomock/./src/mock/fetch.js","webpack://pinomock/./src/mock/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;;;AClFA;AACA,MAAM,IAAsC;AAC5C;AACA;AACA;AACA,eAAe,WAAW,GAAG,iBAAiB,EAAE,eAAe;AAC/D;AACA,eAAe,IAAI,IAAI,iBAAiB;AACxC;AACA;AACA;AACA;AACA,6DAA6D,iBAAiB,yBAAyB;AACvG;;AAEA;AACA,MAAM,IAAsC;AAC5C;AACA;AACA,2BAA2B,WAAW,GAAG,eAAe;AACxD;AACA,eAAe,IAAI,IAAI,iBAAiB;AACxC;AACA;AACA;AACA,gDAAgD,iBAAiB,yBAAyB;AAC1F;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qDAAqD;AACrD;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,KAAK;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA,CAAC,EAAC;;;ACtLiC;;AAEnC;;AAEA,MAAM,6BAAc;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,KAAK,IAAI,gCAAgC;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO,EAAE,cAAc;AAC1C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,6BAAc;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK,UAAU,6BAAc;AAC7B;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,UAAU,6BAAc;AACxB;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,iEAAiE;AACpF,eAAe,mEAAmE;AAClF,mBAAmB,oEAAoE;AACvF,qBAAqB,kEAAkE;AACvF,iBAAiB,oEAAoE;AACrF,uBAAuB,oFAAoF;AAC3G,uBAAuB,oEAAoE;AAC3F,kBAAkB,oEAAoE;AACtF,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,6BAAc;AACd;AACA;;AAEA,6BAAc;AACd;AACA;;AAEe,qFAAc,EAAC;;;ACvJK;;AAEnC;;AAEA,mCAAmC;AACnC,kBAAkB,OAAO,EAAE,eAAe;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,oDAAK,EAAC;;;AC1CgC;AACP;AAClB;;AAEb;AACf;;AAEA,iBAAiB,OAAO;AACxB,kBAAkB,QAAQ;AAC1B,gBAAgB,MAAM;AACtB,wBAAwB,mBAAc;AACtC,eAAe,UAAK;;AAEpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"pino.mock.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pinomock\"] = factory();\n\telse\n\t\troot[\"pinomock\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","function requestLog(req) {\n  if (process.env.NODE_ENV !== 'development') {\n    return;\n  }\n  let data = '================================================================================\\n'\n  data += `%c${req.method} ${req.uri.pathname}${req.uri.search} HTTP/1.1%c\\n`;\n  for (const key in req.headers) {\n    data += `${key}: ${req.headers[key]}\\n`;\n  }\n  if (req.body && (req.method === 'POST' || req.method === 'PUT')) {\n    data += '\\n' + req.body;\n  }\n  console.log(data.trim() + '', 'background-color:lightgreen;','color:initial;background-color:initial;');\n}\n\nfunction responseLog(res) {\n  if (process.env.NODE_ENV !== 'development') {\n    return;\n  }\n  let data = `%cHTTP/1.1 ${res.status} ${res.statusText}%c\\n`;\n  for (const key in res.headers) {\n    data += `${key}: ${res.headers[key]}\\n`;\n  }\n  data += '\\n' + res.body;\n  data = data.trim() + '\\n================================================================================';\n  console.log(data, 'background-color:lightblue;','color:initial;background-color:initial;');\n}\n\nexport class Request {\n  constructor(init) {\n    this.init = init;\n    this.method = init.method ? init.method.toUpperCase() : 'GET';\n    this.url = init.url;\n    this.headers = init.headers || {};\n    this.body = init.body || '';\n    this.uri = new URL(init.url, window.location.href);\n    this.response = new Response();\n  }\n}\n\nexport class Response {\n  constructor() {\n    this.status = 200;\n    this.statusText = 'OK';\n    this.headers = {};\n    this.body = '';\n  }\n\n  send(body) {\n    this.body = body;\n  }\n\n  json(json) {\n    this.headers['Content-Type'] = 'application/json; charset=utf-8';\n    this.body = JSON.stringify(json);\n  }\n}\n\nexport class Server {\n  constructor(host) {\n    this.host = host;\n    this.requestMiddlewares = [];\n    this.responseMiddlewares = [];\n    this.handlers = [];\n  }\n\n  addRequestMiddleware(middleware) {\n    this.requestMiddlewares.push(middleware);\n  }\n\n  addResponseMiddleware(middleware) {\n    this.responseMiddlewares.push(middleware);\n  }\n\n  path2regexp(path) {\n    if (path.constructor === RegExp) {\n      return path;\n    }\n    const paramsNames = [...path.matchAll(/:([a-z_][a-z0-9_]*)/ig)].map(v => v[1]);\n    let pathRegStr = '^' + path.replace(/\\//g, '\\\\/') + '$';\n    for (const name of paramsNames) {\n      pathRegStr = pathRegStr.replace(':' + name, `(?<${name}>[a-z0-9_]+)`);\n    }\n    return new RegExp(pathRegStr, 'ig');\n  }\n\n  request(method, path, handle, useIntercept = true) {\n    this.handlers.push({\n      method,\n      path,\n      handle,\n      useIntercept,\n      pathReg: this.path2regexp(path),\n    });\n  }\n\n  get(path, handle, useIntercept = true) {\n    this.request('GET', path, handle, useIntercept);\n  }\n\n  post(path, handle, useIntercept = true) {\n    this.request('POST', path, handle, useIntercept);\n  }\n\n  put(path, handle, useIntercept = true) {\n    this.request('PUT', path, handle, useIntercept);\n  }\n\n  delete(path, handle, useIntercept = true) {\n    this.request('DELETE', path, handle, useIntercept);\n  }\n\n  isHost(host) {\n    return this.host.constructor === RegExp ? this.host.test(host) : this.host === host;\n  }\n\n  route(req) {\n    for (const handler of this.handlers) {\n      if (handler.useIntercept === req.useIntercept && handler.method === req.method && new RegExp(handler.pathReg.source, handler.pathReg.flags).test(req.uri.pathname)) {\n        return handler;\n      }\n    }\n    return false;\n  }\n\n  async parse(req) {\n    req.params = {};\n    req.query = Object.fromEntries(new window.URLSearchParams(req.uri.search));\n    req.form = {};\n    req.formData = new FormData();\n    req.json = {};\n    const contentType = req.headers['Content-Type'];\n    if ((req.method === 'POST' || req.method === 'PUT') && contentType) {\n      if (contentType.startsWith('application/x-www-form-urlencoded')) {\n        if (req.body instanceof window.URLSearchParams) {\n          req.form = Object.fromEntries(req.body);\n        } else {\n          req.form = Object.fromEntries(new window.URLSearchParams(req.body));\n        }\n      }\n      if (contentType.startsWith('multipart/form-data')) {\n        req.formData = req.body;\n      }\n      if (contentType.startsWith('application/json')) {\n        req.json = JSON.parse(req.body);\n      }\n    }\n    req.response = new Response();\n  }\n\n  async handle(req) {\n    const handler = this.route(req);\n    if (!handler) {\n      return false;\n    }\n    this.parse(req);\n    req.params = Object.fromEntries(new window.URLSearchParams([...req.uri.pathname.matchAll(new RegExp(handler.pathReg.source, handler.pathReg.flags))].pop().groups));\n    requestLog(req);\n    for (const m of this.requestMiddlewares) {\n      await m(req);\n      if (req.ended) {\n        responseLog(req.response);\n        return true;\n      }\n    }\n    await handler.handle(req);\n    for (const m of this.responseMiddlewares) {\n      await m(req);\n      if (req.ended) {\n        responseLog(req.response);\n        return true;\n      }\n    }\n    responseLog(req.response);\n    return true;\n  }\n}\n\nexport default {\n  Request,\n  Response,\n  Server,\n};\n","import { Request } from './Server';\n\nwindow.XMLHttpRequestReal = window.XMLHttpRequest;\n\nclass XMLHttpRequest extends window.XMLHttpRequestReal {\n  getAllResponseHeaders() {\n    if (!this.req || !this.req.response) {\n      return super.getAllResponseHeaders();\n    }\n    let headers = '';\n    for (const name in this.req.response.headers) {\n      headers += `${name}: ${this.req.response.headers[name]}\\r\\n`;\n    }\n    return headers;\n  }\n\n  getResponseHeader(name) {\n    if (!this.req || !this.req.response) {\n      return super.getResponseHeader(name);\n    }\n    return this.req.response.headers[name];\n  }\n\n  open(method, url, async = true, ...args) {\n    super.open(method, url, async, ...args);\n    this.req = new Request({ method, url });\n  }\n\n  setRequestHeader(name, value) {\n    super.setRequestHeader(name, value);\n    this.req.headers[name] = value;\n  }\n\n  async send(...args) {\n    this.sendInit(...args);\n    if (await this.sendRequest(...args)) {\n      this.sendResponse();\n    }\n  }\n\n  sendInit(...args) {\n    this.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    this.req.headers['Host'] = this.req.uri.host;\n    this.req.headers['User-Agent'] = window.navigator.userAgent;\n    this.req.headers['Accept'] = '*/*';\n    this.req.headers['Referer'] = window.location.href;\n    this.req.headers['Accept-Language'] = window.navigator.language;\n    this.req.headers['Cookie'] = window.document.cookie;\n    this.req.body = args.length ? args[0] : '';\n  }\n\n  async sendRequest(...args) {\n    this.req.useIntercept = true;\n    if (await XMLHttpRequest.handle(this.req)) {\n      return true;\n    }\n    this.req.useIntercept = false;\n\n    const result = await new Promise(resolve => {\n      this.onerror2 = this.onerror;\n      this.onerror = (err) => {\n        console.log('XMLHttpRequest error:', err);\n        resolve(false);\n      };\n      this.ontimeout2 = this.ontimeout;\n      this.ontimeout = (err) => {\n        console.log('XMLHttpRequest meout:', err);\n        resolve(false);\n      };\n      this.onload2 = this.onload;\n      this.onload = () => {\n        this.req.response.status = this.status;\n        this.req.response.statusText = this.statusText;\n        if (this.readyState === 4 && (this.status >= 500 || this.status === 404)) {\n          resolve(false);\n        }\n        if (this.readyState === 4 && this.status < 500 && this.status !== 404) {\n          resolve(true);\n          if (this.onload2) {\n            this.onload2();\n          }\n        }\n      };\n      this.onreadystatechange2 = this.onreadystatechange;\n      this.onreadystatechange = () => {\n        this.req.response.status = this.status;\n        this.req.response.statusText = this.statusText;\n        if (this.readyState === 4 && (this.status >= 500 || this.status === 404)) {\n          resolve(false);\n        }\n        if (this.readyState === 4 && this.status < 500 && this.status !== 404) {\n          resolve(true);\n          if (this.onreadystatechange2) {\n            this.onreadystatechange2();\n          }\n        }\n      };\n      super.send(...args);\n    });\n    if (result) {\n      return false;\n    } else if(!XMLHttpRequest.route(this.req)) {\n      if (this.onerror2) {\n        this.onerror2();\n      } else if (this.ontimeout2) {\n        this.ontimeout2();\n      }\n    }\n\n    this.req.useIntercept = false;\n    await XMLHttpRequest.handle(this.req);\n    return true;\n  }\n\n  sendResponse() {\n    // remove readonly\n    Object.defineProperties(this, {\n      readyState: { value: 4, configurable: true, enumerable: true, writable: true },\n      status: { value: 200, configurable: true, enumerable: true, writable: true },\n      statusText: { value: 'OK', configurable: true, enumerable: true, writable: true },\n      responseText: { value: '', configurable: true, enumerable: true, writable: true },\n      response: { value: null, configurable: true, enumerable: true, writable: true },\n      // responseURL: { value: window.location.href, configurable: true, enumerable: true, writable: true },\n      // responseXML: { value: null, configurable: true, enumerable: true, writable: true },\n      // upload: { value: null, configurable: true, enumerable: true, writable: true },\n    });\n\n    this.readyState = 4;\n    this.status = this.req.response.status;\n    this.statusText = this.req.response.statusText;\n    this.response = this.responseText = this.req.response.body;\n    if (this.responseType === 'json' ) {\n      this.response = this.responseText === '' ? {} : JSON.parse(this.responseText);\n    }\n\n    if (this.onload) {\n      this.onload();\n    } else if (this.onreadystatechange) {\n      this.onreadystatechange();\n    }\n  }\n}\n\nXMLHttpRequest.route = function(req) {\n  return false;\n};\n\nXMLHttpRequest.handle = async function(req) {\n  req.response.status = 444;\n};\n\nexport default XMLHttpRequest;\n","import { Request } from './Server';\n\nwindow.fetchReal = window.fetch;\n\nasync function fetch(url, init = {}, ...args) {\n  const req = new Request({ ...init, url });\n\n  req.useIntercept = true;\n  if (await fetch.handle(req)) {\n    return new window.Response(req.response.body, {\n      status: req.response.status,\n      statusText: req.response.statusText,\n      headers: new window.Headers(req.response.headers),\n    });\n  }\n  req.useIntercept = false;\n\n  try {\n    return await window.fetchReal(url, init, ...args);\n  } catch (err) {\n    console.log('fetch error:', err);\n    if (!fetch.handle(req)) {\n      throw err;\n    }\n  }\n\n  await fetch.handle(req);\n  return new window.Response(req.response.body, {\n    status: req.response.status,\n    statusText: req.response.statusText,\n    headers: new window.Headers(req.response.headers),\n  });\n}\n\nfetch.route = function(req) {\n  return false;\n};\n\nfetch.handle = async function(req) {\n  req.response.status = 444;\n};\n\nexport default fetch;\n","import { Request, Response, Server } from './Server';\nimport XMLHttpRequest from './XMLHttpRequest';\nimport fetch from './fetch';\n\nexport default function mock(pino) {\n  // ====== register ======\n\n  pino.Request = Request;\n  pino.Response = Response;\n  pino.Server = Server;\n  pino.XMLHttpRequest = XMLHttpRequest;\n  pino.fetch = fetch;\n\n  // ====== Server ======\n\n  pino.server = new pino.Server(window.location.host);\n  pino.addRequestMiddleware = pino.server.addRequestMiddleware.bind(pino.server);\n  pino.addResponseMiddleware = pino.server.addResponseMiddleware.bind(pino.server);\n  pino.request = pino.server.request.bind(pino.server);\n  pino.get = pino.server.get.bind(pino.server);\n  pino.post = pino.server.post.bind(pino.server);\n  pino.put = pino.server.put.bind(pino.server);\n  pino.delete = pino.server.delete.bind(pino.server);\n\n  pino.servers = [pino.server];\n\n  pino.addServer = function(server) {\n    this.servers.push(server);\n  };\n\n  pino.route = function(req) {\n    for (const server of this.servers) {\n      if (server.isHost(req.uri.host) && server.route(req)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  pino.handle = async function(req) {\n    for (const server of this.servers) {\n      if (server.isHost(req.uri.host) && await server.handle(req)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // ====== XMLHttpRequest ======\n\n  pino.XMLHttpRequest.route = pino.route.bind(pino);\n  pino.XMLHttpRequest.handle = pino.handle.bind(pino);\n\n  // ====== fetch ======\n\n  pino.fetch.route = pino.route.bind(pino);\n  pino.fetch.handle = pino.handle.bind(pino);\n\n  // ====== intercept ======\n\n  pino.intercept = function() {\n    window.XMLHttpRequest = pino.XMLHttpRequest;\n    window.fetch = pino.fetch;\n  };\n\n  pino.unintercept = function() {\n    window.XMLHttpRequest = window.XMLHttpRequestReal;\n    window.fetch = window.fetchReal;\n  };\n\n  // ====== now ======\n  pino.intercept();\n};\n"],"sourceRoot":""}